/** * Created by lzq on 2017/8/28. * 配置文件 */const path = require('path');const utils = require('./../utils');const webpack = require('webpack');const config = require('../../config/index');const merge = require('webpack-merge');const baseWebpackConfig = require('./webpack.base.conf.js');const HtmlWebpackPlugin = require('html-webpack-plugin');const FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin');const globPromise = require('../fileOperate/glob-await');async function handleDev(){    let entrys = {};    let devConfig;    let files = await globPromise('example/entry/*.js');    files.forEach(function(item){        const value = './' + item;        const arrItem = item.split('/');        const key = arrItem[arrItem.length-1].split('.')[0];        entrys[key] = value;    });    baseWebpackConfig.entry = entrys;    Object.keys(baseWebpackConfig.entry).forEach(function(name){        baseWebpackConfig.entry[name] = ['./scripts/dev-client'].concat(baseWebpackConfig.entry[name]);    });    devConfig = merge(baseWebpackConfig, {        output:{            path:config.dev.assetsRoot,  // build 目录            filename: 'js/[name].js',            publicPath: process.env.NODE_ENV === 'production'                ? config.build.assetsPublicPath                : config.dev.assetsPublicPath        },        module:{            rules: utils.styleLoaders({sourceMap: config.dev.cssSourceMap})        },        devtool: '#cheap-module-eval-source-map',        plugins: [            new webpack.DefinePlugin({                'process.env': config.dev.env            }),            new webpack.HotModuleReplacementPlugin(),            new webpack.NoEmitOnErrorsPlugin(),            new FriendlyErrorsPlugin()        ]    });    Object.keys(entrys).forEach(function(entryName){        devConfig.plugins.push(new HtmlWebpackPlugin({            filename:entryName + '.html',            template: 'example/index.html',            chunks: [entryName]        }))    });    return devConfig;}module.exports = async()=>{    return await handleDev();};