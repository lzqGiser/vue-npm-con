/** * Created by lzq on 2017/8/29. */process.env.NODE_ENV = 'production';const ora = require('ora');const fse = require('fs-extra');const path = require('path');const chalk = require('chalk');const webpack = require('webpack');const config = require('../config');const webpackConfig = require('./webpackConfig/webpack.pub.conf.js');const webpackExpConfig = require('./webpackConfig/webpack.buildExp.conf');const prod_fileOperate = require('./fileOperate/prod-fileOperate');const babel_transform = require('./fileOperate/babel-transform');const stylus_transform = require('./fileOperate/stylus-transform');const spinner = ora('package building for production...');spinner.start();const copyFiles = ['yarn.lock', 'README.md'];console.log('-----------------build start---------------------');fse.emptyDir(path.join(config.build.assetsRoot, ''), err => {    webpack(webpackConfig, function(error, stats){        spinner.stop();        if (error) throw error;        process.stdout.write(stats.toString({                colors: true,                modules: false,                children: false,                chunks: false,                chunkModules: false            })+ '\n\n');        console.log(chalk.cyan('  Build complete.\n'))        console.log(chalk.yellow(            '  Tip: built files are meant to be served over an HTTP server.\n' +            '  Opening index.html over file:// won\'t work.\n'        ))    });    webpackExpConfig().then(function(config){        webpack(config,function(error, stats){            console.log(chalk.cyan('example build.\n'))        });    });    copyFiles.forEach(async item => {        await prod_fileOperate.copyFile(item)    });    babel_transform.transformFile(config.build.inputIndex, config.build.outputIndex);    stylus_transform(config.build.assetsRoot, "src/theme/**/*.styl");    prod_fileOperate.createPackageFile();});