/** * Created by lzq on 2017/9/28. *//** * dependency: fetch.js  utils.js * @params:{ *   url: icon绑定链接；     context：作用域； * } */import fetch from '../../commonjs/fetch'import {docCookies} from '../../commonjs/utils'let propsIcon ={    url: 'https://adu.dianping.com/adunion/get_cat0_list',    type: 'get',    reqData: {}};let arrItemIcon = [];const getIconData = async (url,context) => {    let resIcon;    let lzquserid, reqitemPropsURL;    const random = Math.ceil(Math.random()*10000000).toString();    if(docCookies.getItem('lzquserid')){        lzquserid = docCookies.getItem('lzquserid');        reqitemPropsURL = propsIcon.url + '?lzquserid=' + lzquserid;    }else {        docCookies.setItem('lzquserid', random, 100000);        reqitemPropsURL = propsIcon.url + '?lzquserid=' + random;    }    try{        resIcon = await fetch(reqitemPropsURL, propsIcon.type, propsIcon.reqData);        arrItemIcon = arrItemIcon.concat(resIcon.catInfo.slice(0,5));        console.log(arrItemIcon)    }catch(error){        throw("con_icon_container_five组件getDataStart函数获取getshoplist数据错误" + error);    }    addIconLink(url, context);    return arrItemIcon;};const addIconLink = function (url, context) {    let self = context;    let pos = 0;    let utm = 'utm'     //self.$route.query['utm'];    let slotId = 31206; //self.$route.query['slotId'];    console.log(slotId)    let codeUtm = encodeURI(utm);  // 防止url被浏览器解码    arrItemIcon.forEach(function (item) {        if(utm){            item['url'] = url + "?slotId=" + slotId +'&shoptype=' + item.cat_id + '&utm=' + codeUtm;   // 'https://h5.dianping.com/app/adunion-newjh/index.html#/page_info_group_slit?slotId='        }else{            item['url'] = url + "?slotId=" + slotId +'&shoptype=' + item.cat_id;        }        item['pos'] = pos;        pos++;    });};export {    getIconData}